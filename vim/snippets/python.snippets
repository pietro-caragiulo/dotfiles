snippet params
	Parameters
	----------

snippet returns
	Returns
	-------

snippet attrs
	Attributes
	----------

snippet see
	See Also
	--------

snippet funcs
	Functions
	---------

snippet class
	Classes
	-------

snippet ex
	Examples
	--------

snippet ref
	References
	----------

snippet np
	import numpy as np
snippet pd
	import pandas as pd
snippet plt
	import matplotlib.pyplot as plt
snippet mpl
	import matplotlib as mpl
snippet pq
	import quantities as pq
snippet const
	import scipy.constants as const
snippet sio
	from skimage import io
snippet ndimg
	import scipy.ndimage as ndimg
snippet tts
	from traits.api import 
snippet chaco
	from chaco.api import 
snippet enable
	from enable.api import 
snippet enaml
	import enaml
	with enaml.imports():
		from ${1:module} import ${2}
snippet assert_close
	from numpy.testing import assert_array_almost_equal as assert_close
snippet cb
	import cookbook as cb
snippet watch
	import yutils.testing
	with yutils.testing.stopwatch():
snippet deprecate
	from yutils import deprecate
	@deprecate('${1:function to use instead}')
snippet prof
	from yutils.testing import profile
	profile('${1:code to profile}')
snippet ipdb
	from IPython.core.debugger import Tracer; Tracer(colors='Linux')()
snippet qtpdb
	from yutils.testing import qt4_pdb; qt4_pdb()()
snippet stack
	import traceback; traceback.print_stack()
snippet ishell
	import IPython.frontend.terminal.embed as _e; _e.InteractiveShellEmbed()()
snippet dec
	def wrapper(func):
		# @functools.wraps(func)
		def wrapped(*args, **kwargs):
			val = func(*args, **kwargs)
			return val
		return wrapped
snippet catch_warnings
	with warnings.catch_warnings():
		warnings.simplefilter("ignore")
snippet utf8
	# -*- coding: utf-8 -*-
snippet ax
	ax = ax if ax is not None else plt.gca()

snippet gallery
	import matplotlib.pyplot as plt; plt.rcdefaults()
	from mpltools import style; style.use('gallery')
snippet todo
	#TODO: 
snippet all
	__all__ = ['${1}']
snippet nptest
	if __name__ == '__main__':
	    import numpy.testing
	    numpy.testing.run_module_suite()
snippet video
	.. raw:: html

	   <video controls="controls">
		   <source src="${1}.webm" type="video/webm" />
		   Video display requires video tag and webm support.
	   </video>


